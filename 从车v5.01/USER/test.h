#ifndef __TEST_H
#define __TEST_H	 
#include "sys.h"

#define TASK_TYPE0 0
#define TASK_TYPE1 1


#define SYSTEM_TASK_TYPE  TASK_TYPE1

#if SYSTEM_TASK_TYPE==TASK_TYPE1
#define LED_SET  PEout(5)  //PE5 任务板LED定义
#elif SYSTEM_TASK_TYPE==TASK_TYPE0
#define LED_L PCout(15) 	//PC15 任务板左灯定义
#define LED_R PCout(14) 	//PC14 任务板右灯定义
#endif

#define BEEP  PEout(6)   // 任务板蜂鸣器定义
#define PSS   PCin(9)    // 任务板光敏状态定义
#define beep  PDout(12)  	//PD12 核心板蜂鸣器定义

#define LED_SET_APB	      RCC_APB2Periph_GPIOE //LED_SET 时钟
#define LED_SET_GPIO 	  GPIOE                //LED_SET GPIO组
#define LED_SET_PIN		  GPIO_Pin_5           //LED_SET 管脚

#define LED_L_APB	      RCC_APB2Periph_GPIOC //LED_L 时钟
#define LED_L_GPIO 		  GPIOC                //LED_L GPIO组
#define LED_L_PIN		  GPIO_Pin_15          //LED_L 管脚

#define LED_R_APB		  RCC_APB2Periph_GPIOC //LED_R 时钟
#define LED_R_GPIO 		  GPIOC                //LED_R GPIO组
#define LED_R_PIN		  GPIO_Pin_14          //LED_R 管脚




#define PSS_APB			  RCC_APB2Periph_GPIOC //PSS 时钟
#define PSS_GPIO 		  GPIOC                //PSS GPIO组
#define PSS_PIN			  GPIO_Pin_9           //PSS 管脚


#define BEEP_APB		  RCC_APB2Periph_GPIOE //BEEP 时钟
#define BEEP_GPIO 		  GPIOE                //BEEP GPIO组
#define BEEP_PIN		  GPIO_Pin_6            //BEEP 管脚




#define  Up_Track_Speed  3  //定义寻迹数据返回时间间隔 单位ms 





static u8 H_S[4]={0x80,0x7F,0x05,~(0x05)};	 //LCD照片上翻
static u8 H_X[4]={0x80,0x7F,0x1B,~(0x1B)};	 //LCD照片下翻

static u8 H_1[4]={0x00,0xFF,0x0C,~(0x0C)};	 //光源档位加1
static u8 H_2[4]={0x00,0xFF,0x18,~(0x18)};	 //光源档位加2
static u8 H_3[4]={0x00,0xFF,0x5E,~(0x5E)};	 //光源档位加3

static u8 H_SD[4]={0x00,0xFF,0x45,~(0x45)};	  //隧道风扇系统打开

//static u8 HW_K[6]={0x03,0x05,0x14,0x45,0xDE,0x92};  //报警器打开
//static u8 HW_K[6]={0x8a,0x00,0x94,0x04,0x9e,0x06};  //报警器打开1
//static u8 HW_K[6]={0x8a,0x02,0xa7,0x03,0xb2,0x02};  //报警器打开2
//static u8 HW_K[6]={0x83,0x01,0x87,0x01,0x8b,0x01};  //报警器打开3
//static u8 HW_K[6]={0x84,0x00,0x94,0x08,0xa6,0x00};  //报警器打开4
//static u8 HW_K[6]={0x86,0x04,0x95,0x01,0x9d,0x03};  //报警器打开5
//static u8 HW_K[6]={0x92,0x02,0x97,0x01,0xa0,0x06};  //报警器打开6
//static u8 HW_K[6]={0x97,0x01,0x9e,0x02,0xaa,0x04};  //报警器打开7
//static u8 HW_K[6]={0xa0,0x40,0xa8,0x02,0xb3,0x01};  //报警器打开8
//static u8 HW_K[6]={0xa6,0x0e,0x92,0x06,0x85,0x01};  //报警器打开9
//static u8 HW_K[6]={0xa7,0x01,0xa3,0x01,0x9d,0x01};  //报警器打开10
//static u8 HW_K[6]={0xa8,0x02,0x92,0x08,0x86,0x02};  //报警器打开11
//static u8 HW_K[6]={0xad,0x07,0x96,0x02,0x8a,0x00};  //报警器打开12
//static u8 HW_K[6]={0xaf,0x05,0xa7,0x01,0x92,0x10};  //报警器打开13
//static u8 HW_K[6]={0xb3,0x01,0xa3,0x0b,0x86,0x04};  //报警器打开14
static u8 HW_K[6]={0xb4,0x00,0xaa,0x08,0x96,0x02};  //报警器打开15

static u8 HW_G[6]={0x67,0x34,0x78,0xA2,0xFD,0x27};	//报警器关闭

static u8 CP_G1[6]={0xFF,0x12,0x01,0x00,0x00,0x00};
static u8 CP_G2[6]={0xFF,0x13,0x01,0x00,0x00,0x00};

static u8 DZ_K[8]={0x55,0x03,0x01,0x01,0x00,0x00,0x02,0xBB};  //道闸开启
static u8 DZ_G[8]={0x55,0x03,0x01,0x02,0x00,0x00,0x03,0xBB};  //道闸关闭

static u8 Ms_Data[8]={0x55,0x0A,0x01,0x01,0x00,0x00,0x02,0xBB};	//打开磁悬浮

static u8 TFT_UP[8] = {0x55,0x0B,0x10,0x01,0x00,0x00,0x11,0xBB};	//上翻
static u8 TFT_down[8] = {0x55,0x0B,0x10,0x02,0x00,0x00,0x12,0xBB};	//下翻

static u8 SMG_SHOW[8]={0x55,0x04,0x02,0xA1,0xB2,0xC3,0x18,0xBB};  //数码管显示
static u8 SMG_JSK[8]={0x55,0x04,0x03,0x01,0x00,0x00,0x04,0xBB};  //数码管开始计时
static u8 SMG_JSG[8]={0x55,0x04,0x03,0x00,0x00,0x00,0x03,0xBB};  //数码管关闭计时
static u8 SMG_JL[8]={0x55,0x04,0x04,0x00,0x02,0x00,0x06,0xBB};  //数码管显示距离

static u8 CP_SHOW1[6]={0xFF,0x20,0x4E,0x34,0x30,0x30};
static u8 CP_SHOW2[6]={0xFF,0x10,0x59,0x36,0x41,0x33};

#define  NUM  10 	 // 定义接收数据长度
extern u8 S_Tab[NUM]; 	   //定义主返回数据数组

extern u8 Stop_Flag; 
extern u8 Track_Flag;
extern u8 G_Flag;
extern u8 B_Flag;
extern u8 L_Flag;
extern u8 R_Flag;
extern u16 NowMP;
extern u16 CodedDisk;
extern u16 tempMP;
extern u16 MP;
extern int Car_Spend;		 //循迹速度
extern u32 count;
extern int corSpeed;		//循迹调节速度
extern int LSpeed;		   //循迹左轮速度
extern int RSpeed;		   //循迹右轮速度
extern u8 Line_Flag;
extern u8 send_Flag;	   // 发送标志位
extern u8 Rx_Flag;
extern u8 G_Tab[6];	   //定义红外发射数组
	 				    
#endif


